name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: '20'

jobs:
  lint-and-format:
    name: Lint and Format
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Check Prettier formatting
        run: npx prettier --check "src/**/*.ts"

  type-check:
    name: TypeScript Type Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: TypeScript compile check
        run: npx tsc --noEmit

      - name: Build project
        run: npm run build

  test:
    name: Test Suite
    runs-on: ubuntu-latest
    strategy:
      matrix:
        test-group: [unit, integration]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install system dependencies
        run: |
          if [[ "$RUNNER_OS" == "Linux" ]]; then
            sudo apt-get update && sudo apt-get install -y ripgrep
          elif [[ "$RUNNER_OS" == "macOS" ]]; then
            brew install ripgrep
          fi

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests
        if: matrix.test-group == 'unit'
        run: npm run test:unit

      - name: Run integration tests
        if: matrix.test-group == 'integration'
        run: npm run test:integration

  test-coverage:
    name: Test Coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install system dependencies
        run: |
          if [[ "$RUNNER_OS" == "Linux" ]]; then
            sudo apt-get update && sudo apt-get install -y ripgrep
          elif [[ "$RUNNER_OS" == "macOS" ]]; then
            brew install ripgrep
          fi

      - name: Install dependencies
        run: npm ci

      - name: Run tests with coverage
        run: npm run test:coverage -- --exclude "**/*lmstudio-integration*" --exclude "**/*ollama-integration*" --exclude "**/e2e-cli*"

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage/lcov.info
          fail_ci_if_error: false


  build-and-package:
    name: Build and Package
    runs-on: ubuntu-latest
    needs: [lint-and-format, type-check, test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Test built CLI
        run: |
          chmod +x dist/cli.js
          node dist/cli.js --help

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            dist/
            !dist/**/*.map
          retention-days: 7

  matrix-test:
    name: Cross-Platform Tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install system dependencies
        run: |
          if [[ "$RUNNER_OS" == "Linux" ]]; then
            sudo apt-get update && sudo apt-get install -y ripgrep
          elif [[ "$RUNNER_OS" == "macOS" ]]; then
            brew install ripgrep
          fi

      - name: Install dependencies
        run: npm ci

      - name: Run core tests
        run: npm run test:run -- --exclude "**/*lmstudio-integration*" --exclude "**/*ollama-integration*" --exclude "**/e2e-cli*" --exclude "**/*sigint-integration*"

      - name: Build and test CLI
        run: |
          npm run build
          node dist/cli.js --help
